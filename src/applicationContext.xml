<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 该配置表示所有的JavaBean类都放置在base-package所指定的包下    -->
    <context:component-scan base-package="com.px.bean" />
    <context:component-scan base-package="com.px.service" />
    <context:component-scan base-package="com.px.aspect" />
    <aop:aspectj-autoproxy/>
    <!-- annotation-config表示通过注解进行对象注入，通过在JavaBean需要初始化的实例对象上添加注解@Autowired或者@Resource，而不需要第33行的初始化
    <context:annotation-config />
     -->
    <!-- bean标签表示一个JavaBean类，name属性为初始化对象的引用名，class属性为类全限定名，该例中为默认包，所以未加限定包名
    <bean name="categoryOne" class="com.px.bean.Category">
     -->
        <!-- property标签表示初始化JavaBean类中的实例变量，name表示实例变量字段名，注意！！如果该实例变量没有提供set方法将无法进行赋值，value表示实例变量值
        <property name="name" value="category 1" />
    </bean>

    <bean name="categoryTwo" class="com.px.bean.Category">
        <property name="name" value="category 2" />
    </bean>

    <bean name="product" class="com.px.bean.Product">
        <property name="name" value="iphone6s" />
        <property name="description" value="call,photo,listen music,chat and so on" />-->
        <!-- 通过指定引用ref初始化JavaBean中实例对象
        < property name="category" ref="categoryTwo" />

    </bean>

    <bean name="productServic" class="com.px.service.ProductService">
    </bean>
    <bean id="loggerAspect" class="com.px.aspect.LoggerAspect"/>
    <aop:config>
        <aop:pointcut id="loggerCutpoint"
                      expression=
                              "execution(* com.px.service.ProductService.*(..)) "/>

        <aop:aspect id="logAspect" ref="loggerAspect">
            <aop:around pointcut-ref="loggerCutpoint" method="log"/>
        </aop:aspect>
    </aop:config>

    <bean id="testService" class="com.px.service.TestService" />
    <bean id="performanceAspect" class="com.px.aspect.PerformanceAspect" />
    <aop:config>
        <aop:pointcut id="performanceCutpoint" expression="execution(void com.px.service.TestService.test(..))" />
        <aop:aspect id="perAspect" ref="performanceAspect">
            <aop:around method="runTime" pointcut-ref="performanceCutpoint" />
        </aop:aspect>
    </aop:config>
        -->
</beans>